--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,78 @@
+cmake_minimum_required(VERSION 3.2)
+
+project(sqlite3 VERSION 3.39.04.00 LANGUAGES C)
+
+if(CMAKE_SYSTEM_NAME MATCHES "Windows")
+  set(CMAKE_DEBUG_POSTFIX "d")
+endif()
+
+add_library(sqlite3 STATIC sqlite3.h
+                           sqlite3ext.h
+                           sqlite3.c)
+
+target_compile_definitions(sqlite3 PRIVATE _REENTRANT=1
+                                           SQLITE_THREADSAFE=1
+                                           SQLITE_ENABLE_COLUMN_METADATA=1
+                                           SQLITE_TEMP_STORE=3
+                                           SQLITE_DEFAULT_MMAP_SIZE=0x10000000
+                                           SQLITE_ENABLE_MATH_FUNCTIONS
+                                           SQLITE_ENABLE_FTS4
+                                           SQLITE_ENABLE_FTS5
+                                           $<$<CONFIG:Debug>:SQLITE_DEBUG>
+                                           $<$<CONFIG:Debug>:SQLITE_ENABLE_SELECTTRACE>
+                                           $<$<CONFIG:Debug>:SQLITE_ENABLE_WHERETRACE>)
+
+if(UNIX)
+  # Required for loadable extensions
+  target_link_libraries(sqlite3 PRIVATE dl)
+  
+  # Required for SQLITE_ENABLE_MATH_FUNCTIONS
+  target_link_libraries(sqlite3 PRIVATE m)
+
+  # Required for SQLITE_THREADSAFE
+  set(THREADS_PREFER_PTHREAD_FLAG ON)
+  find_package(Threads REQUIRED)
+  target_link_libraries(sqlite3 PRIVATE Threads::Threads)
+endif()
+
+if(CMAKE_SYSTEM_NAME STREQUAL "WindowsStore")
+  target_compile_definitions(sqlite3 PRIVATE SQLITE_OS_WINRT)
+endif()
+
+target_include_directories(
+  sqlite3 PRIVATE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
+          INTERFACE $<INSTALL_INTERFACE:include>)
+
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file(
+  ${CMAKE_CURRENT_BINARY_DIR}/sqlite3-config-version.cmake
+  VERSION ${sqlite_VERSION}
+  COMPATIBILITY AnyNewerVersion
+)
+
+install(TARGETS sqlite3 EXPORT sqlite3
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib
+  LIBRARY DESTINATION lib
+)
+
+install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/sqlite3.h
+              ${CMAKE_CURRENT_SOURCE_DIR}/sqlite3ext.h
+        DESTINATION include)
+
+install(EXPORT sqlite3
+  FILE
+    sqlite3.cmake
+  NAMESPACE
+    sqlite3::
+  DESTINATION
+    lib/cmake/sqlite3
+)
+
+install(
+  FILES
+    cmake/sqlite3-config.cmake
+    ${CMAKE_CURRENT_BINARY_DIR}/sqlite3-config-version.cmake
+  DESTINATION
+    lib/cmake/sqlite3
+)
--- /dev/null
+++ b/cmake/sqlite3-config.cmake
@@ -0,0 +1 @@
+include(${CMAKE_CURRENT_LIST_DIR}/sqlite3.cmake)
